on:
  workflow_dispatch: {}
env:
  PROVIDER: command
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  GOVERSION: 1.21.x
  NODEVERSION: 16.x
  PYTHONVERSION: "3.7"
  DOTNETVERSION: |
    6.0.x
    3.1.301
  JAVAVERSION: "11"

jobs:
  build_provider:
    name: Build Provider
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true
        ref: ${{ github.event.repository.default_branch }}
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # v2
    - name: Build codegen binaries
      run: make codegen
    - name: Build Provider
      run: make provider
    - run: git status --porcelain
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin/ pulumi-resource-${{ env.PROVIDER }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in building provider prerequisites
        fields: repo,commit,author,action
        status: ${{ job.status }}
  build_sdks:
    name: Build SDKs
    runs-on: ubuntu-latest
    needs: build_provider
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true
        fetch-depth: 0
        ref: ${{ github.event.repository.default_branch }}
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # v2
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVAVERSION }}
        distribution: temurin
        cache: gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: "7.6"
    - name: Download provider
      uses: actions/download-artifact@v4
      with:
        name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: UnTar provider binaries
      run: tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin
    - name: Restore Binary Permissions
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Generate SDK
      run: make ${{ matrix.language }}_sdk
    - run: git status --porcelain
    - name: Tar SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure while building SDKs
        fields: repo,commit,author,action
        status: ${{ job.status }}
  open_pr:
    name: Open PR
    runs-on: ubuntu-latest
    needs: build_sdks
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true
        ref: ${{ github.event.repository.default_branch }}
    # I manually copy and pasted one body for each language. GH doesn't seem to have a
    # matrix option that operates with a job.
    - name: Download SDK (nodejs)
      uses: actions/download-artifact@v4
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: UnTar SDK folder (nodejs)
      run: tar -zxf ${{ github.workspace}}/sdk/nodejs.tar.gz -C ${{
        github.workspace}}/sdk/nodejs
    # ---
    - name: Download SDK  (python)
      uses: actions/download-artifact@v4
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: UnTar SDK folder (python)
      run: tar -zxf ${{ github.workspace}}/sdk/python.tar.gz -C ${{
        github.workspace}}/sdk/python
    # ---
    - name: Download SDK  (dotnet)
      uses: actions/download-artifact@v4
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: UnTar SDK folder (dotnet)
      run: tar -zxf ${{ github.workspace}}/sdk/dotnet.tar.gz -C ${{
        github.workspace}}/sdk/dotnet
    # ---
    - name: Download SDK  (go)
      uses: actions/download-artifact@v4
      with:
        name: go-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: UnTar SDK folder (go)
      run: tar -zxf ${{ github.workspace}}/sdk/go.tar.gz -C ${{
        github.workspace}}/sdk/go
    # ---
    - name: Download SDK  (java)
      uses: actions/download-artifact@v4
      with:
        name: java-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: UnTar SDK folder (java)
      run: tar -zxf ${{ github.workspace}}/sdk/java.tar.gz -C ${{
        github.workspace}}/sdk/java
    # --- Template: end
    - run: git checkout -b pulumibot/regenerate-sdks
    - run: git config user.email "bot@pulumi.com"
    - run: git config user.name "PulumiBot"
    - name: Commit SDKs
      run: |
        for sdk in ${{ github.workspace}}/sdk/*/; do
        	git add $sdk &&
                git commit --allow-empty -m "Regenerate ${sdk#${{github.workspace}}}";
        done
    - run: git push --force --set-upstream origin pulumibot/regenerate-sdks
    - name: Open PR
      run: |
        gh pr create -B master -H "pulumibot/regenerate-sdks" --title "Regenerate SDKs" --fill
