@@
var infer identifier

var ctx, context identifier
var id identifier
var outputs, OutputType identifier

var r expression
@@
 import infer "github.com/pulumi/pulumi-go-provider/infer"

-func (r) Delete(ctx context.Context, id string, outputs OutputType) error { ... }
+func (r) Delete(ctx context.Context, req infer.DeleteRequest[OutputType]) error {
+    id := req.ID
+    outputs := req.State
+    
+    ... 
+}

@@
var infer identifier

var ctx, context identifier
var id identifier
var outputs, OutputType identifier

var r, rType expression
@@
 import infer "github.com/pulumi/pulumi-go-provider/infer"

-func (r rType) Delete(ctx context.Context, id string, outputs OutputType) error { ... }
+func (r rType) Delete(ctx context.Context, req infer.DeleteRequest[OutputType]) error {
+    id := req.ID
+    outputs := req.State
+    
+    ... 
+}

@@
var infer identifier

var ctx, context identifier
var id identifier
var outputs, OutputType identifier

var r expression
@@
 import infer "github.com/pulumi/pulumi-go-provider/infer"

-func (r) Delete(...) error { ... }
+func (r) Delete(...) (infer.DeleteResponse, error) {
+    ...
+    return err
+    ... 
+}

@@
var infer identifier

var ctx, context identifier
var id identifier
var outputs, OutputType identifier

var r, rType expression
@@
 import infer "github.com/pulumi/pulumi-go-provider/infer"

-func (r rType) Delete(...) error { ... }
+func (r rType) Delete(...) (infer.DeleteResponse, error) {
+    id := req.ID
+    outputs := req.State
+    
+    ... 
+}
